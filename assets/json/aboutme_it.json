{
  "Chi Sono": {
    "Profilo": {
      "Identità": {
        "Base": "Sono <strong>Riccardo Mariani</strong>, un <em>programmatore autodidatta di 18 anni</em> appassionato di <code>Python</code> e tecnologie digitali, con oltre 8 anni di apprendimento indipendente e progetti pratici. Il mio percorso unisce capacità di problem-solving tecnico, creatività e la determinazione a spingermi oltre i limiti attraverso il coding.",
        "Formazione": {
          "Superiori": "Mi sono diplomato al <strong>Liceo Scientifico Piero Bottoni</strong> di Milano, dove ho coltivato sia la mia formazione scientifica che la passione per la programmazione. La scuola mi ha permesso di unire una solida preparazione scientifica a progetti pratici di informatica.",
          "Università": "Attualmente sono iscritto a <strong>Ingegneria Informatica</strong> presso il <a href='https://www.polimi.it/' target='_blank'>Politecnico di Milano</a> (campus Leonardo). Studiare al Politecnico è al tempo stesso una sfida e un onore: l'università è una delle istituzioni più prestigiose in Italia e in Europa per la formazione tecnica, e farne parte significa appartenere a una comunità dedicata a <em>innovazione, ricerca e ingegneria all'avanguardia</em>. I miei studi stanno rafforzando le mie competenze in algoritmi, elettronica e matematica applicata, offrendomi accesso a opportunità di ricerca di alto livello.",
          "PCTO": "Durante il liceo ho partecipato a diversi corsi <strong>PCTO</strong> presso il <a href='https://www.polimi.it/' target='_blank'>Politecnico di Milano</a>, focalizzati su programmazione e competenze tecniche. Queste esperienze mi hanno introdotto precocemente a contesti di programmazione accademica, al lavoro di squadra su progetti strutturati e alle metodologie di sviluppo software professionale."
        },
        "Insegnamento": "Insegno <code>Python</code> nel mio ex liceo, tenendo lezioni extracurriculari per studenti più giovani. Le lezioni coprono le basi della programmazione, il pensiero algoritmico e applicazioni pratiche. Oltre alle lezioni, offro anche <em>tutoraggio individuale</em> e supporto per progetti, aiutando gli studenti a progettare i propri strumenti o simulazioni. Condividere le mie conoscenze è diventata una parte importante del mio percorso, rafforzando sia le mie competenze <strong>tecniche</strong> che quelle di <strong>comunicazione</strong> e creando una comunità di giovani programmatori motivati."
      },
      "Origini": {
        "Primi Passi": {
          "Scratch": "Ho iniziato a programmare a 10 anni con <code>Scratch</code>, dove ho creato sistemi di chat e RPG utilizzando <em>variabili cloud</em> per gestire interazioni in tempo reale. Scratch mi ha permesso di vedere la programmazione come uno <em>strumento creativo</em> e non solo tecnico, aprendo la strada alla costruzione di sistemi interattivi partendo dall'immaginazione.",
          "Transizione": "Dopo Scratch, ho trascorso un anno sviluppando un <strong>RPG</strong> in <code>Godot</code> con un amico. Questa esperienza mi ha introdotto al <em>game design, scripting e sviluppo collaborativo</em>. Subito dopo sono passato a <code>Python</code> e ho esplorato <code>C</code> e <code>C++</code>, acquisendo la capacità di affrontare sfide tecniche più complesse e focalizzate sulle prestazioni."
        },
        "Svolta": "La mia vera passione per la programmazione è emersa durante un <strong>workshop di Scratch</strong> alle medie, quando ho capito che programmare poteva essere sia un <em>linguaggio universale</em> che uno <em>strumento per modellare idee e fenomeni</em>. Quel momento ha plasmato la mia decisione di dedicarmi al coding non solo come hobby ma come percorso di vita."
      }
    },
    "Progetti": {
      "Panoramica": {
        "Volume": "Nel corso degli anni ho realizzato circa <strong>260 progetti documentati in <code>Python</code></strong>, che spaziano da piccole utility a <em>simulazioni e sistemi di automazione</em> su larga scala. Questa varietà mi ha permesso di imparare continuamente, sperimentare e affinare sia il mio stile di programmazione che il mio approccio al problem-solving.",
        "Categorie": {
          "Automazione": "Ho sviluppato script per l'automazione quotidiana, mod di <code>Minecraft</code>, <strong>bot Telegram</strong> e scheduler di attività. Una parte particolarmente importante del mio lavoro riguarda l'<strong>integrazione con Telegram</strong>: ho progettato bot in grado di <em>controllare da remoto script</em> in esecuzione sul mio PC, consentendomi di gestire l'elaborazione dati, avviare o fermare simulazioni e monitorare attività in tempo reale. Queste soluzioni hanno reso il mio workflow più efficiente e mi hanno introdotto al design event-driven avanzato.",
          "Hacking": "Ho esplorato l'<strong>ethical hacking</strong> in ambienti controllati, sperimentando vulnerabilità di rete, penetration testing e prototipi di backdoor di base. Non si trattava di sfruttamento, ma di capire <em>come i sistemi si rompono</em> e come possano essere difesi, sviluppando così una forte consapevolezza dei principi di cybersecurity e di pratiche di coding responsabile.",
          "Crypto": "Ho costruito <strong>tracker di wallet di criptovalute</strong> e bot di automazione capaci di monitorare bilanci, inviare alert e analizzare pattern di transazioni. Questi progetti hanno integrato API di terze parti con workflow in <code>Python</code> e mi hanno dato una conoscenza pratica del funzionamento dei dati blockchain e dell'automazione finanziaria."
        }
      },
      "In Evidenza": {
        "Modulo e2D": {
          "Scopo": "<code>e2D</code> è la mia libreria personale in <code>Python</code> per <em>grafica, ambienti e simulazioni 2D</em>, progettata per velocizzare la creazione di sistemi interattivi. Integra <strong>rendering grafico</strong> con <em>modelli fisici e matematici</em>, diventando così centrale nella maggior parte dei miei progetti di simulazione.",
          "Funzioni": "Le sue principali funzionalità includono utility per <code>matematica vettoriale</code>, <code>manipolazione dei colori</code>, <strong>gestione degli input</strong>, <strong>rilevamento delle collisioni</strong> e wrapper semplificati attorno a <code>Pygame</code>. Include anche un modulo specializzato <code>e2D.envs</code> che consente la rapida creazione di ambienti dove testare <em>simulazioni fisiche</em> e <em>interazioni in stile videogioco</em>.",
          "Manutenzione": "Mantengo attivamente <code>e2D</code> introducendo miglioramenti di performance e nuovi moduli. Attualmente sto riscrivendo gran parte della libreria in <code>C</code> e <code>C++</code> per migliorarne drasticamente l'efficienza, trasformando i wrapper in <code>Python</code> in <em>moduli compilati</em>. Puoi vedere esempi della libreria in azione nei miei progetti come <a href='myprojects.html#/My%20Projects/Games/AI%20Algorithms/TicTacToe' target='_blank'>TicTacToe AI</a> e <a href='myprojects.html#/My%20Projects/Physics%20Simulations/Electric%20Field' target='_blank'>Simulazione Campo Elettrico</a>."
        }
      },
      "Collaborazioni": {
        "GitHub": "Uso <a href='https://github.com/marick-py' target='_blank'>GitHub</a> come hub centrale per il mio lavoro di sviluppo. Lì carico progetti, gestisco il versionamento del codice e collaboro con altri sviluppatori tramite issue, pull request e contributi.",
        "Community": "Attraverso piattaforme come <a href='https://github.com/marick-py' target='_blank'>GitHub</a> e il mio sito <a href='https://emptyhead.dev' target='_blank'>emptyhead.dev</a>, contribuisco attivamente alla <strong>community open-source</strong>. Condivido codice, scambio conoscenze con altri programmatori e rendo le mie librerie accessibili a chiunque voglia costruirci sopra."
      },
      "Lezioni Scuola": "Ho condotto lezioni extracurriculari di <code>Python</code> al <strong>Liceo Scientifico Piero Bottoni</strong>. Le lezioni partivano da <em>input/output e sintassi di base</em>, per poi approfondire <em>strutture dati, progettazione di algoritmi e strategie di problem-solving</em>. Ho incoraggiato gli studenti a completare piccoli progetti, come calcolatrici, giochi e sistemi testuali, per rafforzare la comprensione. Queste lezioni hanno fornito agli studenti competenze pratiche e a me l'opportunità di affinare il mio stile di insegnamento e le mie capacità di leadership."
    },
    "Esperienza": {
      "Simulazioni": {
        "Focus": {
          "Alta Prestazione": {
            "Motori Particelle": "Ho creato <strong>simulatori di particelle</strong> in grado di gestire decine di migliaia di particelle in tempo reale, garantendo <em>frame rate stabili</em> grazie ad algoritmi ottimizzati e design adatti alle GPU.",
            "Ottimizzazione": "Il mio obiettivo è stato spingere <code>Python</code> oltre i suoi limiti usuali, utilizzando <code>NumPy</code> per la vettorizzazione, <code>Numba</code> per la compilazione JIT e moduli in <code>Cython</code>/<code>C++</code> per le sezioni più computazionalmente costose."
          }
        },
        "Modelli Fisici": {
          "Meccanica": "Le mie simulazioni coprono <em>meccanica newtoniana</em>, dinamica delle collisioni, problemi a più corpi, interazioni gravitazionali e sistemi vincolati come <strong>molle</strong> o <strong>aste rigide</strong>. Questi strumenti mi permettono di testare sia la fisica teorica che configurazioni sperimentali creative.",
          "Metodi Numerici": "Applico frequentemente <em>metodi numerici iterativi</em>, solver differenziali e algoritmi vettorializzati personalizzati per ottenere comportamenti realistici dei sistemi. Profilando attentamente le performance, ottimizzo passo d'integrazione e strategie dei solver per bilanciare accuratezza ed efficienza."
        }
      },
      "AI": {
        "Algoritmi": {
          "Reinforcement": "Ho progettato <strong>agenti Q-learning</strong> in grado di apprendere politiche in ambienti personalizzati, dai giochi semplici a problemi di ottimizzazione. Questi esperimenti mi hanno aiutato a comprendere l'equilibrio tra esplorazione e sfruttamento.",
          "Reti Neurali": "Ho sperimentato con <code>PyTorch</code> e <code>TensorFlow</code>, addestrando modelli di deep learning e anche programmando <em>reti neurali di base</em> da zero. Questo mi ha dato una profonda comprensione delle meccaniche di backpropagation e discesa del gradiente.",
          "NEAT": "Ho applicato il <strong>NeuroEvolution of Augmenting Topologies (NEAT)</strong> per evolvere agenti in simulazioni, in particolare in ambienti dove <em>adattabilità</em> e <em>comportamenti emergenti</em> erano fondamentali."
        },
        "Applicazioni": {
          "Progetti Simulazioni": "I miei esperimenti di AI coprono un'ampia gamma di domini: <strong>simulazioni di auto a guida autonoma</strong> in ambienti stradali semplificati, <strong>controllo di pendoli inversi</strong> per testare loop di feedback e <strong>ecosistemi evolutivi</strong>. Ad esempio, ho sviluppato <em>sistemi a formiche</em> con scie di feromoni e modelli predatore-preda con <em>volpi, conigli e carote</em>. Questi progetti dimostrano come calcolo e comportamenti naturali possano intersecarsi per produrre risultati inaspettati ed emergenti."
        }
      }
    },
    "Strumenti": {
      "Stack Programmazione": {
        "Linguaggi": "Utilizzo principalmente <code>Python</code>, <code>C</code>, <code>C++</code>, <code>JavaScript</code> e <code>GDScript</code> (Godot). <code>C</code> e <code>C++</code> non sono solo linguaggi che ho esplorato a livello accademico, ma strumenti essenziali per <em>ottimizzazione</em> e <em>integrazione low-level</em> con progetti in <code>Python</code>.",
        "Librerie Python": "Il mio stack quotidiano include <code>NumPy</code>, <code>Numba</code>, <code>Cython</code>, <code>TensorFlow</code>, <code>PyTorch</code> e soprattutto la mia <a href='myprojects.html' target='_blank'><code>libreria e2D</code></a>. Questa libreria funge da <em>strumento multifunzionale</em> che semplifica la <strong>progettazione di simulazioni e giochi 2D</strong>."
      },
      "DevOps": {
        "Versioning": "Utilizzo <code>Git</code> e <a href='https://github.com/marick-py' target='_blank'>GitHub</a> per tracciare ogni fase dello sviluppo, garantendo storicità dei progetti, risultati riproducibili e collaborazione semplificata.",
        "Deploy": "Gestisco il mio dominio personale <a href='https://emptyhead.dev' target='_blank'>emptyhead.dev</a>, occupandomi di pratiche avanzate di hosting. Questo include mantenimento di server live, trasferimento file, pubblicazione di <em>simulazioni interattive</em> e presentazione del mio portfolio online."
      },
      "FlussoLavoro": {
        "IDEEditor": "Il mio flusso di lavoro ruota attorno a <strong>VSCode</strong>, dove ho sviluppato un'ampia conoscenza delle scorciatoie per <em>massima produttività</em>. Per i progetti di giochi e simulazioni, mi affido all'editor di <code>Godot</code>, che integra scripting e design di scene in un'unica piattaforma.",
        "Test": "Combino <strong>test manuali</strong> con debugging, logging e occasionali unit test per funzioni critiche. Per lavori ad alte prestazioni, faccio ampio uso di strumenti di profiling per identificare e correggere i colli di bottiglia.",
        "Pubblicazione": "Attualmente mi sto concentrando sulla pubblicazione dei miei progetti più rilevanti in una <a href='myprojects.html' target='_blank'>sezione portfolio</a> del mio sito. L'obiettivo è creare una vetrina ben documentata e accessibile al pubblico, che evidenzi lavori completi e interattivi."
      }
    }
  }
}